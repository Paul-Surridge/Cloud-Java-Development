Spring - Research Work Items

	Arrange:

		Document: Project Structures

			Components/Areas/Conceptual/Logical Areas

			What it is
			What is purpose

			Properties Files
			Configuration
			Source Code

		Document:
			Component + Concepts
				What it is
				What is purpose
				Notes/Points/Rules
		
		Document:
			How Tos/Sequences
			Examples Of

	Collate:

		List of all Annotations
		List of all Classes
		List of all Interfaces
		List of all Mavern Dependencies

	How To's:

		Sample code of all annontations in use
		Sample code of all common pieces of functionality
		Sample code of whole projects structure

		Beans
			Bean Declaration
				via XML
				via Annotations
					Bean Methods @Bean
				via ComponentScanning
					@Component
			Bean Instantiation/Injection
				via Constructor
				via Setter
				via @Autowired

	XML Bean Definition - Source Bean/Class Structure

		Summary of examples of bean definition and then corresponding bean/class structure:

		XML			Java
		------------------------------------------
		Bean Definition		Bean/Class Structure 


	In General:

		1. Dependencies:	Define your dependencies, what Spring projects (and all of their accompanying libraries) to use i.e. what your project needs:

			1. Spring Core
			2. Spring MVC
			3. Spring Data
			4. Spring Integration
			5. ...

		2. Build Out:		Using the skeletal application context, build out your program using the known techniques

			1. Configuration:	Define all of your 'configuration' via the various means, define all of the Beans and how hey will interact...
			2. Input/Output:	Define all of the input/output that the application will constitute.
			3. Implement:		Implement all of the necessary functionality and make the beans dance.

		3. Run/Deploy:		Run the application within the IDE or deploy to cluster ...

	In a sentence:

		I am a broad based engineer with substantial experience of software development, system design and project delivery who has carried out
		substantial research and training aquiring a broad level understanding of technologies surrounding modern enterprise systems and architectures.
